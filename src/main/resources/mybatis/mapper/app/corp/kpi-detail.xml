<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="snp.app.corp.CorpRepository">
    <select id="findKpi_010101" resultType="hashmap">
		<![CDATA[
/* • 자부담 공공급식 가치=급식수×6,400원*1 (품질개선 상수)
   양호 : 3억이상, 2~3억 : 주의, 2억미만 : 위험 */
		SELECT
		IFNULL(SUM(SELF_PAY) * 6400, 0) AS RESULT
		, CASE WHEN IFNULL(SUM(SELF_PAY) * 6400, 0) >= 300000000 THEN 'G'
		       WHEN IFNULL(SUM(SELF_PAY) * 6400, 0) >= 200000000  AND IFNULL(SUM(SELF_PAY) * 6400, 0) < 300000000 THEN 'W'
		       ELSE 'B' END AS STATUS
		FROM M_INCOME_PUBLIC_MEALS
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
		GROUP BY YEAR
		]]>
	</select>

	<select id="findKpi_010102" resultType="hashmap">
		<![CDATA[
/**  • 정부지원 공공급식 가치=급식수×2,400원*2 (자부담 상수) */
		SELECT
		IFNULL(SUM(KIDS_LUNCH_BOX + KIDS_LUNCH_CAR + SILVER_LUNCH_BOX + SILVER_SIDE_DISH + SILVER_LUNCH_ROOM + ETC) * 2400*2, 0) AS RESULT
		, CASE WHEN IFNULL(SUM(KIDS_LUNCH_BOX + KIDS_LUNCH_CAR + SILVER_LUNCH_BOX + SILVER_SIDE_DISH + SILVER_LUNCH_ROOM + ETC) * 2400*2, 0) >= 300000000 THEN 'G'
		       WHEN IFNULL(SUM(KIDS_LUNCH_BOX + KIDS_LUNCH_CAR + SILVER_LUNCH_BOX + SILVER_SIDE_DISH + SILVER_LUNCH_ROOM + ETC) * 2400*2, 0) >= 200000000  AND IFNULL(SUM(SELF_PAY) * 6400, 0) < 300000000 THEN 'W'
		       ELSE 'B' END AS STATUS
		FROM M_INCOME_PUBLIC_MEALS
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
		GROUP BY YEAR
		]]>
	</select>

	<select id="findKpi_010201" resultType="hashmap">
		<![CDATA[
/**  • 공공급식 배송료=총 급식수×361원*3 (배송 상수)  */
		SELECT
		IFNULL(SUM(SELF_PAY + KIDS_LUNCH_BOX + KIDS_LUNCH_CAR + SILVER_LUNCH_BOX + SILVER_SIDE_DISH + SILVER_LUNCH_ROOM + ETC) * 361*3, 0) AS RESULT
		, CASE WHEN IFNULL(SUM(SELF_PAY + KIDS_LUNCH_BOX + KIDS_LUNCH_CAR + SILVER_LUNCH_BOX + SILVER_SIDE_DISH + SILVER_LUNCH_ROOM + ETC) * 361*3, 0) >= 300000000 THEN 'G'
		       WHEN IFNULL(SUM(SELF_PAY + KIDS_LUNCH_BOX + KIDS_LUNCH_CAR + SILVER_LUNCH_BOX + SILVER_SIDE_DISH + SILVER_LUNCH_ROOM + ETC) * 361*3, 0) >= 200000000
		                        AND IFNULL(SUM(SELF_PAY + KIDS_LUNCH_BOX + KIDS_LUNCH_CAR + SILVER_LUNCH_BOX + SILVER_SIDE_DISH + SILVER_LUNCH_ROOM + ETC) * 361*3, 0) < 300000000 THEN 'W'
		       ELSE 'B' END AS STATUS
		FROM M_INCOME_PUBLIC_MEALS
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
		GROUP BY YEAR
		]]>
	</select>

	<select id="findKpi_010301" resultType="hashmap">
		<![CDATA[
/**  • 가치=취약계층 고용수×1,700,000원*4 (월급여 상수)  */
		SELECT
		IFNULL(SUM(GOV_MALE + GOV_FEMALE + SELF_SUPPORT_MALE + SELF_SUPPORT_FEMALE) * 1700000*4, 0) AS RESULT
		, CASE WHEN IFNULL(SUM(GOV_MALE + GOV_FEMALE + SELF_SUPPORT_MALE + SELF_SUPPORT_FEMALE) * 1700000*4, 0) >= 300000000 THEN 'G'
		       WHEN IFNULL(SUM(GOV_MALE + GOV_FEMALE + SELF_SUPPORT_MALE + SELF_SUPPORT_FEMALE) * 1700000*4, 0) >= 200000000
		                        AND IFNULL(SUM(GOV_MALE + GOV_FEMALE + SELF_SUPPORT_MALE + SELF_SUPPORT_FEMALE) * 1700000*4, 0) < 300000000 THEN 'W'
		       ELSE 'B' END AS STATUS
		FROM M_EMPLOYMENT
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
		GROUP BY YEAR
		]]>
	</select>

	<select id="findKpi_010401" resultType="hashmap">
		<![CDATA[
/**  • 전직원 참여시간×월평균임금/209시간  */
		SELECT
		IFNULL(AVG(CO.LABOR) * SUM(DO.REQ_TIME) / 209, 0)  AS RESULT
		, CASE WHEN IFNULL(AVG(CO.LABOR) * SUM(DO.REQ_TIME) / 209, 0) >= 300000000 THEN 'G'
		       WHEN IFNULL(AVG(CO.LABOR) * SUM(DO.REQ_TIME) / 209, 0) >= 200000000  AND IFNULL(AVG(CO.LABOR) * SUM(DO.REQ_TIME) / 209, 0) < 300000000 THEN 'W'
		       ELSE 'B' END AS STATUS
		FROM M_COSTS CO
		INNER JOIN M_DONATION DO ON (CO.CORP_SEQ = DO.CORP_SEQ AND CO.YEAR = DO.YEAR AND CO.MONTH = DO.MONTH)
		WHERE CO.CORP_SEQ = #{p.CORP_SEQ}
		  AND CO.YEAR = #{p.YEAR}
		GROUP BY CO.YEAR
		]]>
	</select>

	<select id="findKpi_010402" resultType="hashmap">
		<![CDATA[
/**  • 사회공헌 목적으로 기여한 금액  */
		SELECT
		IFNULL(SUM(REQ_AMT), 0) AS RESULT
		, CASE WHEN IFNULL(SUM(REQ_AMT), 0) >= 300000000 THEN 'G'
		       WHEN IFNULL(SUM(REQ_AMT), 0) >= 200000000  AND IFNULL(SUM(REQ_AMT), 0) < 300000000 THEN 'W'
		       ELSE 'B' END AS STATUS
		FROM M_DONATION
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
		GROUP BY YEAR
		]]>
	</select>

	<select id="findKpi_030101" resultType="hashmap">
		<![CDATA[
/*  • 3년간 매출액 평균 */
		SELECT
		AVG(IFNULL(VM.SUMMARY_TOTAL_SALES, 0)) AS RESULT
		, 'NA' AS STATUS
		FROM VIEW_M_SUMMARY AS VM
		RIGHT JOIN VIEW_CORP_YEAR AS CO ON (VM.CORP_SEQ = CO.CORP_SEQ AND VM.YEAR = CO.YEAR)
		WHERE CO.CORP_SEQ = #{p.CORP_SEQ}
		  AND CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
		GROUP BY CO.CORP_SEQ
		]]>
	</select>

	<select id="findKpi_030201" resultType="hashmap">
		<![CDATA[
/*  • 3년간 매출액 평균÷3년간 평균인원 */
		SELECT
		AVG(IFNULL(VM.SUMMARY_TOTAL_SALES, 0)) / AVG(IFNULL(VM.EMP_SUM)) AS RESULT
		, 'NA' AS STATUS
		FROM VIEW_M_SUMMARY AS VM
		RIGHT JOIN VIEW_CORP_YEAR AS CO ON (VM.CORP_SEQ = CO.CORP_SEQ AND VM.YEAR = CO.YEAR)
		WHERE CO.CORP_SEQ = #{p.CORP_SEQ}
		  AND CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
		GROUP BY CO.CORP_SEQ
		]]>
	</select>

	<select id="findKpi_030301" resultType="hashmap">
		<![CDATA[
/*  • 3년간 영업이익 평균 - 연간별로 데이터를 보고 판단*/
		SELECT
		AVG(IFNULL(VM.SUMMARY_OP_PROFIT, 0)) AS RESULT
		, 'NA' AS STATUS
		FROM VIEW_M_SUMMARY AS VM
		RIGHT JOIN VIEW_CORP_YEAR AS CO ON (VM.CORP_SEQ = CO.CORP_SEQ AND VM.YEAR = CO.YEAR)
		WHERE CO.CORP_SEQ = #{p.CORP_SEQ}
		  AND CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
		GROUP BY CO.CORP_SEQ, CO.YEAR
		]]>
	</select>

	<select id="findKpi_030401" resultType="hashmap">
		<![CDATA[
/*  • 3년간 당기순이익 평균 - 연간별로 데이터를 보고 판단*/
		SELECT
		AVG(IFNULL(VM.SUMMARY_NET_PROFIT, 0)) AS RESULT
		, 'NA' AS STATUS
		FROM VIEW_M_SUMMARY AS VM
		RIGHT JOIN VIEW_CORP_YEAR AS CO ON (VM.CORP_SEQ = CO.CORP_SEQ AND VM.YEAR = CO.YEAR)
		WHERE CO.CORP_SEQ = #{p.CORP_SEQ}
		  AND CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
		GROUP BY CO.CORP_SEQ, CO.YEAR
		]]>
	</select>

	<select id="findKpi_030501" resultType="hashmap">
	<![CDATA[
/* • 부채비율=부채총액÷자기자본×100  */
		SELECT
		AVG(IFNULL(FI.TOTAL_DEBT, 0)) / AVG(IFNULL(FI.EQUITY_CAPTIAL))  * 100 AS RESULT
		, CASE WHEN AVG(IFNULL(FI.TOTAL_DEBT, 0)) / AVG(IFNULL(FI.EQUITY_CAPTIAL))  * 100 < 100 THEN 'G'
		       WHEN AVG(IFNULL(FI.TOTAL_DEBT, 0)) / AVG(IFNULL(FI.EQUITY_CAPTIAL)) >= 100  AND AVG(IFNULL(FI.TOTAL_DEBT, 0)) / AVG(IFNULL(FI.EQUITY_CAPTIAL)) < 200 THEN 'W'
		       ELSE 'B' END AS STATUS
		FROM Y_FINANCE AS FI
		RIGHT JOIN VIEW_CORP_YEAR AS CO ON (VM.CORP_SEQ = CO.CORP_SEQ AND VM.YEAR = CO.YEAR)
		WHERE CO.CORP_SEQ = #{p.CORP_SEQ}
		  AND CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
		GROUP BY CO.CORP_SEQ
		]]>
</select>

	<select id="findKpi_030601" resultType="hashmap">
		<![CDATA[
/* • 부채비율=유동자산÷유동부채×100  */
		SELECT
		AVG(IFNULL(FI.TOTAL_DEBT, 0)) / AVG(IFNULL(FI.EQUITY_CAPTIAL))  * 100 AS RESULT
		, CASE WHEN AVG(IFNULL(FI.TOTAL_DEBT, 0)) / AVG(IFNULL(FI.EQUITY_CAPTIAL))  * 100 < 100 THEN 'G'
		       WHEN AVG(IFNULL(FI.TOTAL_DEBT, 0)) / AVG(IFNULL(FI.EQUITY_CAPTIAL)) >= 100  AND AVG(IFNULL(FI.TOTAL_DEBT, 0)) / AVG(IFNULL(FI.EQUITY_CAPTIAL)) < 200 THEN 'W'
		       ELSE 'B' END AS STATUS
		FROM Y_FINANCE AS FI
		RIGHT JOIN VIEW_CORP_YEAR AS CO ON (VM.CORP_SEQ = CO.CORP_SEQ AND VM.YEAR = CO.YEAR)
		WHERE CO.CORP_SEQ = #{p.CORP_SEQ}
		  AND CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
		GROUP BY CO.CORP_SEQ
		]]>
	</select>

	<select id="findKpi_010101_compare" resultType="hashmap">
		<![CDATA[
/* • 자부담 공공급식 가치=급식수×6,400원*1 (품질개선 상수)
   양호 : 3억이상, 2~3억 : 주의, 2억미만 : 위험 */
   		SELECT FIR.STATUS, COUNT(FIR.STATUS) AS COUNT
   		FROM
   		(
			SELECT
			CORP_SEQ
			, CASE WHEN IFNULL(SUM(SELF_PAY) * 6400, 0) >= 300000000 THEN 'G'
				   WHEN IFNULL(SUM(SELF_PAY) * 6400, 0) >= 200000000  AND IFNULL(SUM(SELF_PAY) * 6400, 0) < 300000000 THEN 'W'
				   ELSE 'B' END AS STATUS
			FROM M_INCOME_PUBLIC_MEALS
			WHERE YEAR = #{p.YEAR}
			GROUP BY CORP_SEQ, YEAR
		) AS FIR
		GROUP BY FIR.STATUS
		]]>
	</select>

	<select id="findKpi_030101_compare" resultType="hashmap">
		<![CDATA[
/* • 3년간 매출액 평균 */
		SELECT
		'MIN'                         AS FUNC
		, MIN(RESULT)                 AS RESULT
		FROM
		(
			SELECT
			CO.CORP_SEQ
			, AVG(IFNULL(FI.TOTAL_SALES, 0)) AS RESULT
			FROM Y_FINANCE AS FI
			RIGHT JOIN VIEW_CORP_YEAR AS CO ON (FI.CORP_SEQ = CO.CORP_SEQ AND FI.YEAR = CO.YEAR)
			WHERE CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
			GROUP BY CO.CORP_SEQ
		) FIR

		UNION ALL
   		SELECT
   		'MINE'                         AS FUNC
		, AVG(IFNULL(FI.TOTAL_SALES, 0)) AS RESULT
		FROM Y_FINANCE AS FI
		RIGHT JOIN VIEW_CORP_YEAR AS CO ON (FI.CORP_SEQ = CO.CORP_SEQ AND FI.YEAR = CO.YEAR)
		WHERE CO.CORP_SEQ = #{p.CORP_SEQ}
		  AND CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
		GROUP BY CO.CORP_SEQ

		UNION ALL
		SELECT
		'MAX'                         AS FUNC
		, MAX(RESULT)                 AS RESULT
		FROM
		(
			SELECT
			CO.CORP_SEQ
			, AVG(IFNULL(FI.TOTAL_SALES, 0)) AS RESULT
			FROM Y_FINANCE AS FI
			RIGHT JOIN VIEW_CORP_YEAR AS CO ON (FI.CORP_SEQ = CO.CORP_SEQ AND FI.YEAR = CO.YEAR)
			WHERE CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
			GROUP BY CO.CORP_SEQ
		) FIR

		UNION ALL
		SELECT
		'AVG'                         AS FUNC
		, AVG(RESULT)                 AS RESULT
		FROM
		(
			SELECT
			CO.CORP_SEQ
			, AVG(IFNULL(FI.TOTAL_SALES, 0)) AS RESULT
			FROM Y_FINANCE AS FI
			RIGHT JOIN VIEW_CORP_YEAR AS CO ON (FI.CORP_SEQ = CO.CORP_SEQ AND FI.YEAR = CO.YEAR)
			WHERE CO.YEAR BETWEEN #{p.YEAR} -2 AND #{p.YEAR}
			GROUP BY CO.CORP_SEQ
		) FIR


		]]>
	</select>
</mapper>
