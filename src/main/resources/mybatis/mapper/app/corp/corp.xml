<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="snp.app.corp.CorpRepository">
    <!-- 센터 기본 정보 -->
    <select id="findCorpInfo" resultType="hashmap">
		SELECT
			    CORP_SEQ
			  , CENTER_NM
			  , UP_INSTITUTE_NM
			  , OPEN_DT
			  , TEL_NO
			  , FAX_NO
			  , ADDRESS
			  , CEO_NM
			  , CEO_MOBILE_NO
			  , MANAGER_NM
			  , MANAGER_MOBILE_NO
			  , CORP_TYPE
			  , (SELECT CD_NM FROM CODE WHERE GRP_CD = 'CORP_TYPE' AND CD = CORP_TYPE) AS CORP_TYPE_NM
			  , SE_CERT_YN
			  , SE_CERT_REV_NO
			  , SE_NM
			  , SE_DT
			  , JOB_SUPP_BEGIN_DT
			  , JOB_SUPP_END_DT
			  , REG_ID
			  , REG_DT
		      , MOD_ID
			  , MOD_DT
		 FROM CORP_INFO
		WHERE CORP_SEQ = #{CORP_SEQ}
	</select>

    <insert id="insertCorpInfo">
		INSERT INTO CORP_INFO
		(
            CENTER_NM
            , UP_INSTITUTE_NM
            , OPEN_DT
            , TEL_NO
            , FAX_NO
            , ADDRESS
            , CEO_NM
            , CEO_MOBILE_NO
            , MANAGER_NM
            , MANAGER_MOBILE_NO
            , CORP_TYPE
            , SE_CERT_YN
            , SE_CERT_REV_NO
            , SE_NM
            , SE_DT
            , JOB_SUPP_BEGIN_DT
            , JOB_SUPP_END_DT
            , REG_ID
            , REG_DT
		)
		VALUES
		(
            #{p.CENTER_NM}
            , #{p.UP_INSTITUTE_NM}
            , #{p.OPEN_DT, typeHandler=snp.spring.mybatis.DateHandler}
            , #{p.TEL_NO}
            , #{p.FAX_NO}
            , #{p.ADDRESS}
            , #{p.CEO_NM}
            , #{p.CEO_MOBILE_NO}
            , #{p.MANAGER_NM}
            , #{p.MANAGER_MOBILE_NO}
            , #{p.CORP_TYPE}
            , #{p.SE_CERT_YN}
            , #{p.SE_CERT_REV_NO}
            , #{p.SE_NM}
            , #{p.SE_DT, typeHandler=snp.spring.mybatis.DateHandler}
            , #{p.JOB_SUPP_BEGIN_DT, typeHandler=snp.spring.mybatis.DateHandler}
            , #{p.JOB_SUPP_END_DT, typeHandler=snp.spring.mybatis.DateHandler}
            , #{u.userId}
            , now()
		)
	</insert>

    <update id="updateCorpInfo">
		UPDATE CORP_INFO
		SET
			CENTER_NM           = #{p.CENTER_NM}
            , UP_INSTITUTE_NM   = #{p.UP_INSTITUTE_NM}
            , OPEN_DT           = #{p.OPEN_DT, typeHandler=snp.spring.mybatis.DateHandler}
            , TEL_NO            = #{p.TEL_NO}
            , FAX_NO            = #{p.FAX_NO}
            , ADDRESS           = #{p.ADDRESS}
            , CEO_NM            = #{p.CEO_NM}
            , CEO_MOBILE_NO     = #{p.CEO_MOBILE_NO}
            , MANAGER_NM        = #{p.MANAGER_NM}
            , MANAGER_MOBILE_NO = #{p.MANAGER_MOBILE_NO}
            , CORP_TYPE         = #{p.CORP_TYPE}
            , SE_CERT_YN        = #{p.SE_CERT_YN}
            , SE_CERT_REV_NO    = #{p.SE_CERT_REV_NO}
            , SE_NM             = #{p.SE_NM}
            , SE_DT             = #{p.SE_DT, typeHandler=snp.spring.mybatis.DateHandler}
            , JOB_SUPP_BEGIN_DT = #{p.JOB_SUPP_BEGIN_DT, typeHandler=snp.spring.mybatis.DateHandler}
            , JOB_SUPP_END_DT   = #{p.JOB_SUPP_END_DT, typeHandler=snp.spring.mybatis.DateHandler}
            , MOD_ID            = #{u.userId}
            , MOD_DT            = now()
		WHERE CORP_SEQ = #{p.CORP_SEQ}
	</update>

    <delete id="deleteCorpInfo">
		DELETE FROM CORP_INFO
		WHERE CORP_SEQ = #{CORP_SEQ}
	</delete>

    <select id="findCorpEmployee" resultType="hashmap">
		SELECT
				CORP_EMP_SEQ
				, CORP_SEQ
				, EMP_NUM
				, WEAK_NUM
				, WEAK_SILVER_NUM
				, WEAK_HANDICAP_NUM
				, WEAK_POOR_NUM
				, WEAK_MIXBLOOD_NUM
				, WEAK_NK_NUM
				, WEAK_YOUNG_NUM
				, WEAK_LOST_JOB_NUM
				, WEAK_ONE_PARENT_NUM
				, WEAK_FAMILY_VIOLENCE_NUM
				, WEAK_EXCONVICT_NUM
				, WEAK_CRIMINAL_VICTIM_NUM
				, WEAK_PROSTITUTION_VICTIM_NUM
				, WEAK_ETC_NUM
				, AGE_LESS40
				, AGE_LESS55
				, AGE_LESS65
				, AGE_MORE65
				, EMP_MALE_NUM
				, EMP_FEMALE_NUM
				, PERM_EMP_NUM
				, TEMP_EMP_NUM
				, WEEK_LABOR_TIME
				, LONG_WORK_YEAR
				, OFFICER_SALARY
				, NON_OFFICER_SALARY
				, REG_ID
				, REG_DT
				, MOD_ID
				, MOD_DT
		FROM CORP_EMP
		WHERE CORP_SEQ = #{CORP_SEQ}
	</select>

    <insert id="insertCorpEmployee">
		INSERT INTO CORP_EMP
		(
			  CORP_SEQ
			, EMP_NUM
			, WEAK_NUM
			, WEAK_SILVER_NUM
			, WEAK_HANDICAP_NUM
			, WEAK_POOR_NUM
			, WEAK_MIXBLOOD_NUM
			, WEAK_NK_NUM
			, WEAK_YOUNG_NUM
			, WEAK_LOST_JOB_NUM
			, WEAK_ONE_PARENT_NUM
			, WEAK_FAMILY_VIOLENCE_NUM
			, WEAK_EXCONVICT_NUM
			, WEAK_CRIMINAL_VICTIM_NUM
			, WEAK_PROSTITUTION_VICTIM_NUM
			, WEAK_ETC_NUM
			, AGE_LESS40
			, AGE_LESS55
			, AGE_LESS65
			, AGE_MORE65
			, EMP_MALE_NUM
			, EMP_FEMALE_NUM
			, PERM_EMP_NUM
			, TEMP_EMP_NUM
			, WEEK_LABOR_TIME
			, LONG_WORK_YEAR
			, OFFICER_SALARY
			, NON_OFFICER_SALARY
			, REG_ID
			, REG_DT
		)
		VALUES
		(
			  #{p.CORP_SEQ}
			, #{p.EMP_NUM}
			, #{p.WEAK_NUM}
			, #{p.WEAK_SILVER_NUM}
			, #{p.WEAK_HANDICAP_NUM}
			, #{p.WEAK_POOR_NUM}
			, #{p.WEAK_MIXBLOOD_NUM}
			, #{p.WEAK_NK_NUM}
			, #{p.WEAK_YOUNG_NUM}
			, #{p.WEAK_LOST_JOB_NUM}
			, #{p.WEAK_ONE_PARENT_NUM}
			, #{p.WEAK_FAMILY_VIOLENCE_NUM}
			, #{p.WEAK_EXCONVICT_NUM}
			, #{p.WEAK_CRIMINAL_VICTIM_NUM}
			, #{p.WEAK_PROSTITUTION_VICTIM_NUM}
			, #{p.WEAK_ETC_NUM}
			, #{p.AGE_LESS40}
			, #{p.AGE_LESS55}
			, #{p.AGE_LESS65}
			, #{p.AGE_MORE65}
			, #{p.EMP_MALE_NUM}
			, #{p.EMP_FEMALE_NUM}
			, #{p.PERM_EMP_NUM}
			, #{p.TEMP_EMP_NUM}
			, #{p.WEEK_LABOR_TIME}
			, #{p.LONG_WORK_YEAR}
			, #{p.OFFICER_SALARY}
			, #{p.NON_OFFICER_SALARY}
			, #{u.userId}
			, now()
		)
	</insert>

    <update id="updateCorpEmployee">
		UPDATE CORP_EMP
		SET
			  EMP_NUM                      = #{p.EMP_NUM}
			, WEAK_NUM                     = #{p.WEAK_NUM}
			, WEAK_SILVER_NUM              = #{p.WEAK_SILVER_NUM}
			, WEAK_HANDICAP_NUM            = #{p.WEAK_HANDICAP_NUM}
			, WEAK_POOR_NUM                = #{p.WEAK_POOR_NUM}
			, WEAK_MIXBLOOD_NUM            = #{p.WEAK_MIXBLOOD_NUM}
			, WEAK_NK_NUM                  = #{p.WEAK_NK_NUM}
			, WEAK_YOUNG_NUM               = #{p.WEAK_YOUNG_NUM}
			, WEAK_LOST_JOB_NUM            = #{p.WEAK_LOST_JOB_NUM}
			, WEAK_ONE_PARENT_NUM          = #{p.WEAK_ONE_PARENT_NUM}
			, WEAK_FAMILY_VIOLENCE_NUM     = #{p.WEAK_FAMILY_VIOLENCE_NUM}
			, WEAK_EXCONVICT_NUM           = #{p.WEAK_EXCONVICT_NUM}
			, WEAK_CRIMINAL_VICTIM_NUM     = #{p.WEAK_CRIMINAL_VICTIM_NUM}
			, WEAK_PROSTITUTION_VICTIM_NUM = #{p.WEAK_PROSTITUTION_VICTIM_NUM}
			, WEAK_ETC_NUM                 = #{p.WEAK_ETC_NUM}
			, AGE_LESS40                   = #{p.AGE_LESS40}
			, AGE_LESS55                   = #{p.AGE_LESS55}
			, AGE_LESS65                   = #{p.AGE_LESS65}
			, AGE_MORE65                   = #{p.AGE_MORE65}
			, EMP_MALE_NUM                 = #{p.EMP_MALE_NUM}
			, EMP_FEMALE_NUM               = #{p.EMP_FEMALE_NUM}
			, PERM_EMP_NUM                 = #{p.PERM_EMP_NUM}
			, TEMP_EMP_NUM                 = #{p.TEMP_EMP_NUM}
			, WEEK_LABOR_TIME              = #{p.WEEK_LABOR_TIME}
			, LONG_WORK_YEAR               = #{p.LONG_WORK_YEAR}
			, OFFICER_SALARY               = #{p.OFFICER_SALARY}
			, NON_OFFICER_SALARY           = #{p.NON_OFFICER_SALARY}
			, MOD_ID                       = #{u.userId}
			, MOD_DT                       = now()
		WHERE CORP_SEQ = #{p.CORP_SEQ}
	</update>

    <delete id="deleteCorpEmployee">
		DELETE FROM CORP_EMP
		 WHERE CORP_SEQ = #{CORP_SEQ}
	</delete>

    <select id="findCosts" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
			 , (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
			 , Y.YEAR
			 , Y.MONTH
			 , IFNULL(C.FOOD_MATERIAL       , 0) AS FOOD_MATERIAL
			 , IFNULL(C.LABOR               , 0) AS LABOR
			 , IFNULL(C.MANAGEMENT          , 0) AS MANAGEMENT
			 , IFNULL(C.DEPRECIATION        , 0) AS DEPRECIATION
			 , IFNULL(C.NON_SALES           , 0) AS NON_SALES
			 , IFNULL(C.RETIRE_SAVING       , 0) AS RETIRE_SAVING
			 , IFNULL(C.INDEPENDENCY_SAVING , 0) AS INDEPENDENCY_SAVING
			 , C.REG_ID
			 , C.REG_DT
		 FROM M_COSTS AS C
   RIGHT JOIN YM AS Y ON (
                             C.CORP_SEQ = #{p.CORP_SEQ}
                             AND C.YEAR = Y.YEAR AND
                             C.MONTH = Y.MONTH)
		WHERE Y.YEAR = #{p.YEAR}
	</select>

    <!-- 월간실적(비용현황)-->
    <insert id="insertCosts">
		INSERT INTO M_COSTS
		(
			  CORP_SEQ
			, YEAR
			, MONTH
			, FOOD_MATERIAL
			, LABOR
			, MANAGEMENT
			, DEPRECIATION
			, NON_SALES
			, RETIRE_SAVING
			, INDEPENDENCY_SAVING
			, REG_ID
			, REG_DT
		)
		VALUES
		(
			  #{p.CORP_SEQ}
			, #{p.YEAR}
			, #{p.MONTH}
			, #{p.FOOD_MATERIAL}
			, #{p.LABOR}
			, #{p.MANAGEMENT}
			, #{p.DEPRECIATION}
			, #{p.NON_SALES}
			, #{p.RETIRE_SAVING}
			, #{p.INDEPENDENCY_SAVING}
			, #{u.userId}
			, now()
		)
	</insert>

    <delete id="deleteCosts">
		DELETE FROM M_COSTS
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
	</delete>

    <!-- 월간실적(고용현황)-->
    <select id="findEmployment" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
			 , (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
			 , Y.YEAR
			 , Y.MONTH
			 , IFNULL(E.GENERAL_MALE         , 0) AS GENERAL_MALE
			 , IFNULL(E.GENERAL_FEMALE       , 0) AS GENERAL_FEMALE
			 , IFNULL(E.GOV_MALE             , 0) AS GOV_MALE
			 , IFNULL(E.GOV_FEMALE           , 0) AS GOV_FEMALE
			 , IFNULL(E.SELF_SUPPORT_MALE    , 0) AS SELF_SUPPORT_MALE
			 , IFNULL(E.SELF_SUPPORT_FEMALE  , 0) AS SELF_SUPPORT_FEMALE
			 , IFNULL(E.ROLE_CEO             , 0) AS ROLE_CEO
			 , IFNULL(E.ROLE_DIETITION       , 0) AS ROLE_DIETITION
			 , IFNULL(E.ROLE_MANAGER         , 0) AS ROLE_MANAGER
			 , IFNULL(E.ROLE_GENERAL_AFFAIRS , 0) AS ROLE_GENERAL_AFFAIRS
			 , IFNULL(E.ROLE_COOK            , 0) AS ROLE_COOK
			 , IFNULL(E.ROLE_DELIVERY_DRIVER , 0) AS ROLE_DELIVERY_DRIVER
			 , IFNULL(E.ROLE_DELIVERY_LABOR  , 0) AS ROLE_DELIVERY_LABOR
			 , IFNULL(E.ROLE_ETC             , 0) AS ROLE_ETC
			 , E.REG_ID
			 , E.REG_DT
		 FROM M_EMPLOYMENT AS E
   RIGHT JOIN YM AS Y ON (
                              E.CORP_SEQ = #{p.CORP_SEQ}
                              AND E.YEAR = Y.YEAR
                              AND E.MONTH = Y.MONTH)
		WHERE Y.YEAR = #{p.YEAR}
	</select>

    <insert id="insertEmployment">
		INSERT INTO M_EMPLOYMENT
		(
			  CORP_SEQ
			, YEAR
			, MONTH
			, GENERAL_MALE
			, GENERAL_FEMALE
			, GOV_MALE
			, GOV_FEMALE
			, SELF_SUPPORT_MALE
			, SELF_SUPPORT_FEMALE
			, ROLE_CEO
			, ROLE_DIETITION
			, ROLE_MANAGER
			, ROLE_GENERAL_AFFAIRS
			, ROLE_COOK
			, ROLE_DELIVERY_DRIVER
			, ROLE_DELIVERY_LABOR
			, ROLE_ETC
			, REG_ID
			, REG_DT
		)
		VALUES
		(
			  #{p.CORP_SEQ}
			, #{p.YEAR}
			, #{p.MONTH}
			, #{p.GENERAL_MALE}
			, #{p.GENERAL_FEMALE}
			, #{p.GOV_MALE}
			, #{p.GOV_FEMALE}
			, #{p.SELF_SUPPORT_MALE}
			, #{p.SELF_SUPPORT_FEMALE}
			, #{p.ROLE_CEO}
			, #{p.ROLE_DIETITION}
			, #{p.ROLE_MANAGER}
			, #{p.ROLE_GENERAL_AFFAIRS}
			, #{p.ROLE_COOK}
			, #{p.ROLE_DELIVERY_DRIVER}
			, #{p.ROLE_DELIVERY_LABOR}
			, #{p.ROLE_ETC}
			, #{u.userId}
			, now()
		)
	</insert>

    <delete id="deleteEmployment">
		DELETE FROM  M_EMPLOYMENT
		 WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
	</delete>

    <!-- 월간실적(수입현황-유료급식)-->
    <select id="findIncomePaidMeals" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
			 , (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
			 , Y.YEAR
			 , Y.MONTH
			 , IFNULL(PA.LUNCH_BOX     , 0) AS LUNCH_BOX
			 , IFNULL(PA.CATERING      , 0) AS CATERING
			 , IFNULL(PA.RESERVE_FORCES, 0) AS RESERVE_FORCES
			 , IFNULL(PA.SCHOOL        , 0) AS SCHOOL
			 , IFNULL(PA.LUNCH_ROOM    , 0) AS LUNCH_ROOM
			 , IFNULL(PA.SPECIALTY     , 0) AS SPECIALTY
			 , IFNULL(PA.HYNIX_SUPPORT , 0) AS HYNIX_SUPPORT
			 , IFNULL(PA.ETC           , 0) AS ETC
			 , PA.REG_ID
			 , PA.REG_DT
		 FROM M_INCOME_PAID_MEALS AS PA
   RIGHT JOIN YM AS Y ON (
                              PA.CORP_SEQ = #{p.CORP_SEQ}
                              AND PA.YEAR = Y.YEAR
                              AND PA.MONTH = Y.MONTH)
		WHERE Y.YEAR = #{p.YEAR}
	</select>

    <insert id="insertIncomePaidMeals">
		INSERT INTO M_INCOME_PAID_MEALS
		(
			  CORP_SEQ
			, YEAR
			, MONTH
			, LUNCH_BOX
			, CATERING
			, RESERVE_FORCES
			, SCHOOL
			, LUNCH_ROOM
			, SPECIALTY
			, HYNIX_SUPPORT
			, ETC
			, REG_ID
			, REG_DT

		)
		VALUES
		(
			  #{p.CORP_SEQ}
			, #{p.YEAR}
			, #{p.MONTH}
			, #{p.LUNCH_BOX}
			, #{p.CATERING}
			, #{p.RESERVE_FORCES}
			, #{p.SCHOOL}
			, #{p.LUNCH_ROOM}
			, #{p.SPECIALTY}
			, #{p.HYNIX_SUPPORT}
			, #{p.ETC}
			, #{u.userId}
			, now()
		)
	</insert>

    <delete id="deleteIncomePaidMeals">
		DELETE FROM M_INCOME_PAID_MEALS
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
	</delete>

    <!-- 월간실적(수입현황-공공급식)-->
    <select id="findIncomePublicMeals" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
			 , (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
			 , Y.YEAR
			 , Y.MONTH
			 , IFNULL(PU.KIDS_LUNCH_BOX         , 0) AS KIDS_LUNCH_BOX
			 , IFNULL(PU.KIDS_LUNCH_CAR         , 0) AS KIDS_LUNCH_CAR
			 , IFNULL(PU.SILVER_LUNCH_BOX       , 0) AS SILVER_LUNCH_BOX
			 , IFNULL(PU.SILVER_SIDE_DISH       , 0) AS SILVER_SIDE_DISH
			 , IFNULL(PU.SILVER_LUNCH_ROOM      , 0) AS SILVER_LUNCH_ROOM
			 , IFNULL(PU.ETC                    , 0) AS ETC
			 , IFNULL(PU.SALES_KIDS_LUNCH_BOX   , 0) AS SALES_KIDS_LUNCH_BOX
			 , IFNULL(PU.SALES_KIDS_LUNCH_CAR   , 0) AS SALES_KIDS_LUNCH_CAR
			 , IFNULL(PU.SALES_SILVER_LUNCH_BOX , 0) AS SALES_SILVER_LUNCH_BOX
			 , IFNULL(PU.SALES_SILVER_SIDE_DISH , 0) AS SALES_SILVER_SIDE_DISH
			 , IFNULL(PU.SALES_SILVER_LUNCH_ROOM, 0) AS SALES_SILVER_LUNCH_ROOM
			 , IFNULL(PU.SALES_ETC              , 0) AS SALES_ETC
			 , IFNULL(PU.SELF_PAY               , 0) AS SELF_PAY
			 , PU.REG_ID
			 , PU.REG_DT
		 FROM M_INCOME_PUBLIC_MEALS AS PU
   RIGHT JOIN YM AS Y ON (
                             PU.CORP_SEQ = #{p.CORP_SEQ}
                             AND PU.YEAR = Y.YEAR
                             AND PU.MONTH = Y.MONTH)
		WHERE Y.YEAR = #{p.YEAR}
	</select>

    <insert id="insertIncomePublicMeals">
		INSERT INTO M_INCOME_PUBLIC_MEALS
		(
			  CORP_SEQ
			, YEAR
			, MONTH
			, KIDS_LUNCH_BOX
			, KIDS_LUNCH_CAR
			, SILVER_LUNCH_BOX
			, SILVER_SIDE_DISH
			, SILVER_LUNCH_ROOM
			, ETC
			, SALES_KIDS_LUNCH_BOX
			, SALES_KIDS_LUNCH_CAR
			, SALES_SILVER_LUNCH_BOX
			, SALES_SILVER_SIDE_DISH
			, SALES_SILVER_LUNCH_ROOM
			, SALES_ETC
			, SELF_PAY
			, REG_ID
			, REG_DT

		)
		VALUES
		(
			  #{p.CORP_SEQ}
			, #{p.YEAR}
			, #{p.MONTH}
			, #{p.KIDS_LUNCH_BOX}
			, #{p.KIDS_LUNCH_CAR}
			, #{p.SILVER_LUNCH_BOX}
			, #{p.SILVER_SIDE_DISH}
			, #{p.SILVER_LUNCH_ROOM}
			, #{p.ETC}
			, #{p.SALES_KIDS_LUNCH_BOX}
			, #{p.SALES_KIDS_LUNCH_CAR}
			, #{p.SALES_SILVER_LUNCH_BOX}
			, #{p.SALES_SILVER_SIDE_DISH}
			, #{p.SALES_SILVER_LUNCH_ROOM}
			, #{p.SALES_ETC}
			, #{p.SELF_PAY}
			, #{u.userId}
			, now()
		)
	</insert>

    <delete id="deleteIncomePublicMeals">
		DELETE FROM M_INCOME_PUBLIC_MEALS
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
	</delete>

    <!-- 월간실적(지원금)-->
    <select id="findIncomeSupport" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
			 , (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
			 , Y.YEAR
			 , Y.MONTH
			 , IFNULL(SU.GOV_LABOR_COSTS       , 0) AS GOV_LABOR_COSTS
			 , IFNULL(SU.GOV_BIZ_DEVELOPMENT   , 0) AS GOV_BIZ_DEVELOPMENT
			 , IFNULL(SU.GOV_MANAGEMENT        , 0) AS GOV_MANAGEMENT
			 , IFNULL(SU.GOV_ETC               , 0) AS GOV_ETC
			 , IFNULL(SU.GOV_NOTE              , 0) AS GOV_NOTE
			 , IFNULL(SU.EXT_DONATION          , 0) AS EXT_DONATION
			 , IFNULL(SU.EXT_FOUNDATION_SUPPORT, 0) AS EXT_FOUNDATION_SUPPORT
			 , IFNULL(SU.EXT_ETC               , 0) AS EXT_ETC
			 , SU.REG_ID
			 , SU.REG_DT
		 FROM M_INCOME_SUPPORT AS SU
   RIGHT JOIN YM AS Y ON (
                             SU.CORP_SEQ = #{p.CORP_SEQ}
                             AND SU.YEAR = Y.YEAR
                             AND SU.MONTH = Y.MONTH)
		WHERE Y.YEAR = #{p.YEAR}
	</select>

    <insert id="insertIncomeSupport">
		INSERT INTO M_INCOME_SUPPORT
		(
			  CORP_SEQ
			, YEAR
			, MONTH
			, GOV_LABOR_COSTS
			, GOV_BIZ_DEVELOPMENT
			, GOV_MANAGEMENT
			, GOV_ETC
			, GOV_NOTE
			, EXT_DONATION
			, EXT_FOUNDATION_SUPPORT
			, EXT_ETC
			, REG_ID
			, REG_DT
		)
		VALUES
		(
			  #{p.CORP_SEQ}
			, #{p.YEAR}
			, #{p.MONTH}
			, #{p.GOV_LABOR_COSTS}
			, #{p.GOV_BIZ_DEVELOPMENT}
			, #{p.GOV_MANAGEMENT}
			, #{p.GOV_ETC}
			, #{p.GOV_NOTE}
			, #{p.EXT_DONATION}
			, #{p.EXT_FOUNDATION_SUPPORT}
			, #{p.EXT_ETC}
			, #{u.userId}
			, now()
		)
	</insert>

    <delete id="deleteIncomeSupport">
		DELETE FROM M_INCOME_SUPPORT
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</delete>


    <!-- 월간실적(사회적공헌)-->
    <select id="findDonation" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
		, (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
		, Y.YEAR
		, Y.MONTH
		, IFNULL(DN.NAME,       '') AS NAME
		, IFNULL(DN.TARGET,     '') AS TARGET
		, IFNULL(DN.REQ_PERSON , 0) AS REQ_PERSON
		, IFNULL(DN.REQ_TIME   , 0) AS REQ_TIME
		, IFNULL(DN.REQ_AMT    , 0) AS REQ_AMT
		, IFNULL(DN.TOTAL_AMT  , 0) AS TOTAL_AMT
		, DN.REG_ID
		, DN.REG_DT
		FROM M_DONATION AS DN
		RIGHT JOIN YM AS Y ON (
								    DN.CORP_SEQ = #{p.CORP_SEQ}
								AND DN.YEAR = Y.YEAR
								AND DN.MONTH = Y.MONTH)
		WHERE Y.YEAR = #{p.YEAR}
	</select>

    <insert id="insertDonation">
		INSERT INTO M_DONATION
		(
		  CORP_SEQ
		, YEAR
		, MONTH
		, NAME
		, TARGET
		, REQ_PERSON
		, REQ_TIME
		, REQ_AMT
		, TOTAL_AMT
		, REG_ID
		, REG_DT
		)
		VALUES
		(
		  #{p.CORP_SEQ}
		, #{p.YEAR}
		, #{p.MONTH}
		, #{p.NAME}
		, #{p.TARGET}
		, #{p.REQ_PERSON}
		, #{p.REQ_TIME}
		, #{p.REQ_AMT}
		, #{p.TOTAL_AMT}
		, #{u.userId}
		, now()
		)
	</insert>

    <delete id="deleteDonation">
		DELETE FROM M_DONATION
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</delete>

	<!-- 월간 실적 - 월평균 임금 -->
	<select id="findSalary" resultType="hashmap">
		SELECT
		YEAR
		, AVG(LABOR) SALARY_AVG
		FROM M_COSTS
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR = #{p.YEAR}
		GROUP BY YEAR
	</select>

	<insert id="insertSalary">
		INSERT INTO M_SALARY_AVG
		(
		CORP_SEQ
		, YEAR
		, SALARY_AVG
		, REG_ID
		, REG_DT
		)
		VALUES
		(
		#{p.CORP_SEQ}
		, #{p.YEAR}
		, #{p.SALARY_AVG}
		, #{u.userId}
		, now()
		)
	</insert>

	<delete id="deleteSalary">
		DELETE
		FROM M_SALARY_AVG
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</delete>

	<!-- 월간 운영현황 -->
    <select id="findMonthlyOperationStatus" resultType="hashmap">
		SELECT  CORP_SEQ
		      , YEAR
		      , MONTH
			  , SUMMARY_TOTAL_SALES      /* 총매출 */
			  , PUBLIC_TOTAL_SALES       /* 공공 급식 매출 */
			  , PAID_TOTAL_SALES         /* 유료 급식 매출 */
			  , SUMMARY_OP_PROFIT        /* 영업이익 */
			  , SUMMARY_NET_PROFIT       /* 순이익 */
			  , SUMMARY_INDEPEND_POWER_A /* 자립도_A */
			  , SUMMARY_INDEPEND_POWER_B /* 자립도_B */
			  , SUMMARY_EMP_WEAK_RATE    /* 취약계층 고용율 */
		FROM VIEW_M_SUMMARY
	   WHERE CORP_SEQ = #{p.CORP_SEQ}
	     AND YEAR = #{p.YEAR}
	</select>
    <!--
	/*공공급식수 */        PUBLIC_MEALS_CNT
	/*공공매출*/           PUBLIC_TOTAL_SALES
	/*공공자부담급식수*/    PUBLIC_SELF_PAY
	/*유료매출*/           PAID_TOTAL_SALES
	/*수익B-인건비*/       SUPPORT_GOV_LABOR_COSTS
	/*수익B-사업개발비*/   SUPPORT_GOV_BIZ_DEVELOPMENT
	/*수익B-운영비*/       SUPPORT_GOV_MANAGEMENT
	/*수익B-기타*/         SUPPORT_GOV_ETC
	/*수익B-합계*/         SUPPORT_GOV_TOTAL
	/*수익B-기타수입*/     SUPPORT_ETC_TOTAL
	/*비용-식재료비*/      COSTS_FOOD_MATERIAL
	/*비용-인건비*/        COSTS_LABOR
	/*비용-운영비*/        COSTS_MANAGEMENT
	/*비용-감가상각비*/     COSTS_DEPRECIATION
	/*비용-영업외비용*/     COSTS_NON_SALES
	/*비용-합계*/          COSTS_TOTAL
	/*비용-월퇴직 적립금*/  COSTS_RETIRE_SAVING
	/*비용-자립적립급*/     COSTS_INDEPENDENCY_SAVING
	/*고용-일반고용합계*/   EMP_GENERAL_SUM
	/*고용-정부지원합계*/   EMP_GOV_SUM
	/*고용-자활근로*/      EMP_SELP_SUPPORT_SUM
	/*고용-합계*/         EMP_SUM
	/*매출합계*/           SUMMARY_TOTAL_SALES
	/*영업이익*/           SUMMARY_OP_PROFIT
	/*순이익*/            SUMMARY_NET_PROFIT
	/*수익A*/             PROFIT_A
	/*수익B*/             PROFIT_B
	/*자립도A*/           SUMMARY_INDEPEND_POWER_A
	/*자립도B*/           SUMMARY_INDEPEND_POWER_B
	/*취약계층고용율*/     SUMMARY_EMP_WEAK_RATE
    -->
	<!-- 요약 1 -->
	<select id="findMonthlySummary1" resultType="hashmap">
		SELECT
		#{p.CORP_SEQ} AS CORP_SEQ
		, (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
		, YEAR
		, MONTH
		, PUBLIC_MEALS_CNT       	            /* 공공급식수*/
		, SUMMARY_TOTAL_SALES       	            /* 총매출*/
		, PUBLIC_TOTAL_SALES         	            /* 공공 급식 매출*/
		, PAID_TOTAL_SALES        		            /* 유료 급식 매출*/
		, PAID_TOTAL_SALES / PUBLIC_MEALS_CNT * 100
							  AS PAID_TOTAL_RATE    /*유료매출 비율*/
		, PUBLIC_SELF_PAY 				            /* 자부담 급식수*/
		FROM VIEW_M_SUMMARY
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</select>

	<!-- 요약 2 -->
	<select id="findMonthlySummary2" resultType="hashmap">
		SELECT
		  #{p.CORP_SEQ} AS CORP_SEQ
		, (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
		, YEAR
		, MONTH
		, PUBLIC_TOTAL_SALES           /*공공 급식 매출*/
		, PAID_TOTAL_SALES             /*유료 급식 매출*/
		, SUPPORT_ETC_TOTAL            /*기타 수익*/
		, COSTS_LABOR                  /*비용-인건비*/
		, COSTS_FOOD_MATERIAL          /*비용-식재료비*/
	    , COSTS_MANAGEMENT             /*비용-운영비*/
	    , COSTS_DEPRECIATION           /*비용-감가상각비*/
	    , COSTS_NON_SALES              /*비용-영업외비용*/
	    , SUPPORT_GOV_LABOR_COSTS      /*수익B-인건비*/
		, SUPPORT_GOV_BIZ_DEVELOPMENT  /*수익B-사업개발비*/
	    , SUPPORT_GOV_MANAGEMENT       /*수익B-운영비*/
	    , SUPPORT_GOV_ETC              /*수익B-기타*/
	    , COSTS_RETIRE_SAVING          /*비용-월퇴직 적립금*/
	    , COSTS_INDEPENDENCY_SAVING    /*비용-자립적립급*/
		FROM VIEW_M_SUMMARY
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</select>

	<!-- 요약 3 -->
	<select id="findMonthlySummary3" resultType="hashmap">
		SELECT
		#{p.CORP_SEQ} AS CORP_SEQ
		, (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
		, YEAR
		, MONTH
		, SUMMARY_INDEPEND_POWER_A                 /*자립도A*/
	    , SUMMARY_INDEPEND_POWER_B                 /*자립도B*/
	    , PROFIT_A                                 /*수익A*/
	    , PROFIT_B                                 /*수익B*/
		, COSTS_TOTAL                              /*비용-합계*/
		, EMP_SUM                                  /*고용-합계*/
	    , SUMMARY_TOTAL_SALES                      /*매출합계*/
	    , SUMMARY_OP_PROFIT                        /*영업이익*/
	    , SUMMARY_NET_PROFIT                       /*순이익*/
	    , COSTS_LABOR / EMP_SUM AS COSTS_LABOR_AVG /*평균인건비*/
	    , COSTS_LABOR / SUMMARY_TOTAL_SALES * 100
	                  AS COSTS_LABOR_RATE          /*인건비율*/
	    , COSTS_FOOD_MATERIAL / SUMMARY_TOTAL_SALES * 100
	                          AS COSTS_FOOD_MATERIAL_RATE /*총재료비율*/
	    , SUMMARY_OP_PROFIT                               /*영업이익*/
	    , SUMMARY_NET_PROFIT                              /*순이익*/
		FROM VIEW_M_SUMMARY
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</select>

	<!-- 요약 4 -->
	<select id="findMonthlySummary4" resultType="hashmap">
		SELECT
		  #{p.CORP_SEQ} AS CORP_SEQ
		, (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
		, YEAR
		, MONTH
		, EMP_GENERAL_SUM                        /*일반고용*/
	    , IFNULL(EMP_GENERAL_SUM        / EMP_SUM * 100, 0)
	                         AS EMP_GENERAL_RATE /*일반고용비율*/
	    , EMP_GOV_SUM                            /*고용-노동부*/
	    , IFNULL(EMP_GOV_SUM           / EMP_SUM * 100, 0)
	                              AS EMP_GOVRATE /*고용-노동부비율*/
	    , EMP_SELF_SUPPORT_SUM                   /*고용-자활근로*/
	    , IFNULL(EMP_SELF_SUPPORT_SUM  / EMP_SUM * 100, 0)
	                    AS EMP_SELF_SUPPORT_RATE /*고용-자활근로*/
	    , EMP_SUM                                /*고용-합계*/
	    , EMP_WEAK_SUM							 /*취약계층*/
	    , IFNULL(EMP_WEAK_SUM         / EMP_SUM * 100, 0)
	                           AS EMP_WEAK_RATE  /*취약게층*/
	    , EMP_FEMALE_SUM                         /*여성*/
	    , IFNULL(EMP_FEMALE_SUM       / EMP_SUM * 100, 0)
	                          AS EMP_FEMALE_RATE /*여성비율*/
		FROM VIEW_M_SUMMARY
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</select>


    <!-- 연간실적 경제적 가치-->
    <select id="findFinance" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
		, (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
		, Y.YEAR
		, IFNULL(FI.TOTAL_SALES      , 0) AS TOTAL_SALES
		, IFNULL(FI.MANYEAR_AVG      , 0) AS MANYEAR_AVG
		, IFNULL(FI.OP_PROFIT_RATE   , 0) AS OP_PROFIT_RATE
		, IFNULL(FI.NET_PROFIT_RATE  , 0) AS NET_PROFIT_RATE
		, IFNULL(FI.TOTAL_DEBT       , 0) AS TOTAL_DEBT
		, IFNULL(FI.EQUITY_CAPITAL   , 0) AS EQUITY_CAPITAL
		, IFNULL(FI.LIQUID_ASSETS    , 0) AS LIQUID_ASSETS
		, IFNULL(FI.TOTAL_ASSETS     , 0) AS TOTAL_ASSETS
		, FI.REG_ID
		, FI.REG_DT
		FROM Y_FINANCE AS FI
		RIGHT JOIN Y  ON (
		FI.CORP_SEQ = #{p.CORP_SEQ}
		AND FI.YEAR = Y.YEAR)
		WHERE Y.YEAR BETWEEN #{p.YEAR}-2 AND #{p.YEAR}
		ORDER BY Y.YEAR DESC
	</select>

    <insert id="insertFinance">
		INSERT INTO Y_FINANCE
		(
		  CORP_SEQ
		, YEAR
		, TOTAL_SALES
		, MANYEAR_AVG
		, OP_PROFIT_RATE
		, NET_PROFIT_RATE
		, TOTAL_DEBT
		, EQUITY_CAPITAL
		, LIQUID_ASSETS
		, TOTAL_ASSETS
		, REG_ID
		, REG_DT
		)
		VALUES
		(
		  #{p.CORP_SEQ}
		, #{p.YEAR}
		, #{p.TOTAL_SALES}
		, #{p.MANYEAR_AVG}
		, #{p.OP_PROFIT_RATE}
		, #{p.NET_PROFIT_RATE}
		, #{p.TOTAL_DEBT}
		, #{p.EQUITY_CAPITAL}
		, #{p.LIQUID_ASSETS}
		, #{p.TOTAL_ASSETS}
		, #{u.userId}
		, now()
		)
	</insert>

    <delete id="deleteFinance">
		DELETE FROM Y_FINANCE
		 WHERE CORP_SEQ = #{p.CORP_SEQ}
		   AND YEAR = #{p.YEAR}
	</delete>

    <!-- 연간실적 사회혁신 노력 -->
    <select id="findSocialBiz" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
		, (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
		, #{p.YEAR} AS YEAR
		, SB.BIZ_NAME
		, SB.START_YYYYMM
		, SB.END_YYYYMM
		, IFNULL(SB.BIZ_EXPENSE    , 0)  AS  BIZ_EXPENSE
		, SB.GOV_DEPT_NAME
		, IFNULL(SB.SELF_YN        , 'N') AS SELF_YN
		, IFNULL(SB.BIZ_DEV_YN     , 'N') AS BIZ_DEV_YN
		, IFNULL(SB.RND_YN         , 'N') AS RND_YN
		, IFNULL(SB.CONSULTING_YN  , 'N') AS CONSULTING_YN
		, SB.REG_ID
		, SB.REG_DT
		FROM Y_SOCIAL_BIZ AS SB
		WHERE SB.CORP_SEQ = #{p.CORP_SEQ}
		  AND SB.YEAR = #{p.YEAR}
	</select>

    <insert id="insertSocialBiz">
		INSERT INTO Y_SOCIAL_BIZ
		(
			  CORP_SEQ
			, YEAR
			, BIZ_NAME
			, START_YYYYMM
			, END_YYYYMM
			, BIZ_EXPENSE
			, GOV_DEPT_NAME
			, SELF_YN
			, BIZ_DEV_YN
			, RND_YN
			, CONSULTING_YN
			, REG_ID
			, REG_DT

		)
		VALUES
		(
			  #{p.CORP_SEQ}
			, #{p.YEAR}
			, #{p.BIZ_NAME}
			, #{p.START_YYYYMM, typeHandler=snp.spring.mybatis.DateHandler}
			, #{p.END_YYYYMM, typeHandler=snp.spring.mybatis.DateHandler}
			, #{p.BIZ_EXPENSE}
			, #{p.GOV_DEPT_NAME}
			, #{p.SELF_YN}
			, #{p.BIZ_DEV_YN}
			, #{p.RND_YN}
			, #{p.CONSULTING_YN}
			, #{p.REG_ID}
			, now()
		)
	</insert>

    <delete id="deleteSocialBiz">
		DELETE FROM Y_SOCIAL_BIZ
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</delete>

    <!-- 연간실적 사업역량개발 노력 -->
    <select id="findBizStudy" resultType="hashmap">
		SELECT #{p.CORP_SEQ} AS CORP_SEQ
		, (SELECT CENTER_NM FROM CORP_INFO WHERE CORP_SEQ = #{p.CORP_SEQ}) AS CENTER_NM
		, #{p.YEAR} AS YEAR
		, BS.STUDY_NM
		, IFNULL(BS.STUDY_TIME    ,   0) AS STUDY_TIME
		, BS.STUDY_DATE
		, BS.GOV_DEPT_NAME
		, IFNULL(BS.SELF_YN       , 'N') AS SELF_YN
		, IFNULL(BS.BIZ_DEV_YN    , 'N') AS BIZ_DEV_YN
		, IFNULL(BS.RND_YN        , 'N') AS RND_YN
		, IFNULL(BS.CONSULTING_YN , 'N') AS CONSULTING_YN
		, IFNULL(FI.MANYEAR_AVG   ,  0 ) AS MANYEAR_AVG
		, BS.REG_ID
		, BS.REG_DT
		, BS.MOD_ID
		, BS.MOD_DT
		FROM Y_BIZ_STUDY AS BS
		LEFT JOIN Y_FINANCE AS FI ON(BS.CORP_SEQ = FI.CORP_SEQ AND BS.YEAR = FI.YEAR)
		WHERE BS.CORP_SEQ = #{p.CORP_SEQ}
		AND BS.YEAR = #{p.YEAR}

	</select>

    <insert id="insertBizStudy">
		INSERT INTO Y_BIZ_STUDY
		(
		  CORP_SEQ
		, YEAR
		, STUDY_NM
		, STUDY_TIME
		, STUDY_DATE
		, GOV_DEPT_NAME
		, SELF_YN
		, BIZ_DEV_YN
		, RND_YN
		, CONSULTING_YN
		, REG_ID
		, REG_DT
		)
		VALUES
		(
		  #{p.CORP_SEQ}
		, #{p.YEAR}
		, #{p.STUDY_NM}
		, #{p.STUDY_TIME}
		, #{p.STUDY_DATE, typeHandler=snp.spring.mybatis.DateHandler}
		, #{p.GOV_DEPT_NAME}
		, #{p.SELF_YN}
		, #{p.BIZ_DEV_YN}
		, #{p.RND_YN}
		, #{p.CONSULTING_YN}
		, #{p.REG_ID}
		, now()
		)
	</insert>

    <delete id="deleteBizStudy">
		DELETE FROM Y_BIZ_STUDY
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		AND YEAR = #{p.YEAR}
	</delete>

    <!-- 성과지표 조회 -->
    <select id="findKpi" resultType="hashmap">
        SELECT
          L1.KPI_CD AS L1_KPI_CD
        , L1.KPI_NM AS L1_KPI_NM
        , L2.KPI_CD AS L2_KPI_CD
        , L2.KPI_NM AS L2_KPI_NM
        , L3.KPI_CD AS L3_KPI_CD
        , L3.KPI_NM AS L3_KPI_NM
        , MA.RESULT
        , null        AS STATUS
        FROM
        (
          SELECT * FROM KPI WHERE LEVEL = 1
        ) L1
        INNER JOIN
        (
          SELECT * FROM KPI WHERE LEVEL = 2
        ) L2 ON (L1.KPI_CD = L2.P_KPI_CD)
        INNER JOIN
        (
          SELECT * FROM KPI WHERE LEVEL = 3
        ) L3 ON (L2.KPI_CD = L3.P_KPI_CD)
        LEFT JOIN
        (
          SELECT * FROM Y_MANUAL_KPI WHERE CORP_SEQ = #{p.CORP_SEQ} AND YEAR = #{p.YEAR}
        ) MA ON (L3.KPI_CD = MA.KPI_CD)
        ORDER BY L3.LEVEL, L3.DISP_ORD

    </select>

    <!-- 매뉴얼 성과지표 조회(등록용 템플릿) -->
    <select id="findManualKpi" resultType="hashmap">
        SELECT Y.CORP_SEQ
        , Y.CENTER_NM
        , Y.YEAR
        , Y.KPI_CD
        , IFNULL(MK.RESULT, '') AS RESULT
        FROM
        (
            /* 센터 수 * 수작업 KPI 수 * 연도를 만듬 */
            SELECT CORP.CORP_SEQ, CORP.CENTER_NM, KPI.KPI_CD, Y.YEAR
            FROM KPI, Y, CORP_INFO CORP
            WHERE KPI.MANUAL_YN = 'Y'
            AND Y.YEAR = #{p.YEAR}
            ORDER BY CORP_SEQ, KPI_CD
        ) Y
        LEFT JOIN Y_MANUAL_KPI MK
        ON (Y.CORP_SEQ = MK.CORP_SEQ AND Y.KPI_CD = MK.KPI_CD AND Y.YEAR = MK.YEAR)
    </select>

    <insert id="insertManualKpi">
        INSERT INTO Y_MANUAL_KPI
        (
          CORP_SEQ
          , YEAR
          , KPI_CD
          , RESULT
          , REG_ID
          , REG_DT
        ) VALUES
        (
          #{p.CORP_SEQ}
          , #{p.YEAR}
          , #{p.KPI_CD}
          , #{p.RESULT}
          , #{u.userId}
          , now()
        )
    </insert>

    <delete id="deleteManualKpi">
        DELETE FROM Y_MANUAL_KPI
        WHERE CORP_SEQ = #{p.CORP_SEQ}
        AND YEAR = #{p.YEAR}
    </delete>

    <select id="findCurrentYear" resultType="int">
		SELECT YEAR(NOW())
	</select>

    <select id="findMaxYear" resultType="int">
		SELECT MAX(EVAL_YEAR) AS EVAL_YEAR FROM EVAL
	</select>


	<!-- 운영실적추이 (매출액) -->
	<select id="findOpSalesAmount" resultType="hashmap">
		SELECT YEAR, TOTAL_SALES AS KPI_VALUE
		FROM Y_FINANCE
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR BETWEEN #{p.FROM_YEAR} and #{p.TO_YEAR}
		ORDER BY YEAR DESC
	</select>

	<!-- 운영실적추이 (인당생산성) -->
	<select id="findOpSalesPower" resultType="hashmap">
		SELECT YEAR, TOTAL_SALES / MANYEAR_AVG AS KPI_VALUE
		FROM Y_FINANCE
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR BETWEEN #{p.FROM_YEAR} and #{p.TO_YEAR}
		  ORDER BY YEAR DESC
	</select>

	<!-- 운영실적추이 (사업 개발/자문 횟수) -->
	<select id="findOpSocialBizCount" resultType="hashmap">
		SELECT YEAR, COUNT(*) AS KPI_VALUE
		FROM Y_SOCIAL_BIZ
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR BETWEEN #{p.FROM_YEAR} and #{p.TO_YEAR}
		GROUP BY YEAR
		ORDER BY YEAR DESC
	</select>

	<!-- 운영실적추이 (사업 개발/자문 횟수) -->
	<select id="findOpSocialBizExpense" resultType="hashmap">
		SELECT YEAR, SUM(BIZ_EXPENSE) AS KPI_VALUE
		FROM Y_SOCIAL_BIZ
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR BETWEEN #{p.FROM_YEAR} and #{p.TO_YEAR}
		GROUP BY YEAR
		ORDER BY YEAR DESC
	</select>

	<!-- 운영실적추이 (교육/학습 횟수) -->
	<select id="findOpBizStudyCount" resultType="hashmap">
		SELECT YEAR, COUNT(*) AS KPI_VALUE
		FROM Y_BIZ_STUDY
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR BETWEEN #{p.FROM_YEAR} and #{p.TO_YEAR}
		GROUP BY YEAR
		ORDER BY YEAR DESC
	</select>

	<!-- 운영실적추이 (교육/학습 시간) -->
	<select id="findOpBizStudyTime" resultType="hashmap">
		SELECT YEAR, SUM(STUDY_TIME) AS KPI_VALUE
		FROM Y_BIZ_STUDY
		WHERE CORP_SEQ = #{p.CORP_SEQ}
		  AND YEAR BETWEEN #{p.FROM_YEAR} and #{p.TO_YEAR}
		GROUP BY YEAR
		ORDER BY YEAR DESC
	</select>
</mapper>
