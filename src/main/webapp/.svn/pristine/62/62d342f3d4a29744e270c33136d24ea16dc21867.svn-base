<!-- <link rel="import" href="/bower_components/polymer/polymer.html" />
<link rel="import" href="/bower_components/paper-card/paper-card.html" />
<link rel="import" href="/bower_components/iron-ajax/iron-ajax.html" /> -->

<link rel="import" href="../common/behavior-page.html" />
<link rel="import" href="../style/c3-chart-style.html" />

<dom-module id="summary-dist-by-chart">
    <template>
        <style include="c3-chart-style">
            :host {
                @apply(--layout-vertical);
                margin-top: 40px;
            }
        </style>

        <iron-ajax id="protocolGetKpiChart" url="/api/corp/kpis/depth1" headers='{"X-Requested-With": "XMLHttpRequest"}' method="GET" content-type="application/json" on-response="_drawChart" on-error="_onErrorHandler"></iron-ajax>

        <div id="chart"></div>
    </template>

    <!-- <script src="/scripts/d3.min.js"></script>
    <script src="/scripts/c3.min.js"></script> -->
    <script>
        Polymer({
            is: 'summary-dist-by-chart',

            behaviors: [PS.BehaviorPage],

            properties: {
                loadChart: Boolean,
                _data: {
                    type: Array,
                    value: function() {
                        return [];
                    }
                },
                _isAttached: Boolean,
            },

            observers: [
                '_fetchData(_isAttached)'
            ],

            ready: function() {
                this.scopeSubtree(this.$.chart, true);
            },

            attached: function() {
                this._isAttached = true;
            },

            _fetchData: function() {
                if (this.getBoundingClientRect().width > 0)
                    this.$.protocolGetKpiChart.generateRequest();
            },

            _drawChart: function(e) {
                this._data = e.target.lastResponse;

                var pieData = [];
                var i;

                for (i = 0; i < this._data.length; i++) {
                    pieData.push([this._data[i].depth1Nm, this._data[i].score]);
                }

                c3.generate({
                    bindto: this.$.chart,
                    data: {
                        columns: pieData,
                        keys: {
                            value: ['score']
                        },
                        type: 'pie'
                    },
                    size: {
                        height: 500
                    },
                    color: {
                        pattern: ['#2fd05f', '#5cefa1', '#f46464', '#fca6a6', '#44cddb', '#6be8ee', '#9ef5f7', '#fa77c3', '#fdb9ea', '#fee6f8']
                    },
                    onrendered: function() {
                        this._closeOverlay();
                    }.bind(this)
                });
            },

            refresh: function() {
                if (this._data.length == 0)
                    this._fetchData();
            }
        })
    </script>
</dom-module>
