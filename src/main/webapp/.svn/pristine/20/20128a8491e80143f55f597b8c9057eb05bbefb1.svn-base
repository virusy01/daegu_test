/**
 * Created by jwm_000 on 2015-10-09.
 */

;var corpKpi = (function (window, $, undefined) {
    var pagenator;
    var radarChart;

    var corpList;
    var corpDetailData;
    $(document).ready(function () {
        $("#btnSearch").on("click", getCorpCount);
        $("#btnGoBack").on("click", togglePage);
        $("#navTab > li > a").on("click", toggleTab);

        corpKpi.initialize();
    });

    function initialize(){
        var options1 = {
            cache: true,
            data: {grpCd:"CORP_TYPE"},
            type: "post",
            dataType: "json",
            success: function (result) {
                var promptData = {CD:'', CD_NM:"전체"};
                var selectBuilder = new SelectBuilder($("#selCorpType"), "CD", "CD_NM");
                selectBuilder.buildOptions(result, promptData);
            }
        };

        var options2 = {
            cache: true,
            data: {grpCd:"COMP_KIND"},
            type: "post",
            dataType: "json",
            success: function (result) {
                var promptData = {CD:'', CD_NM:"전체"};
                var selectBuilder = new SelectBuilder($("#selCompKind"), "CD", "CD_NM");
                selectBuilder.buildOptions(result, promptData);
            }
        };

        var options3 = {
            cache: true,
            data: {grpCd:"BIZ_SECT"},
            type: "post",
            dataType: "json",
            success: function (result) {
                var promptData = {CD:'', CD_NM:"전체"};
                var selectBuilder = new SelectBuilder($("#selBizSect"), "CD", "CD_NM");
                selectBuilder.buildOptions(result, promptData);
            }
        };

        var promises = [
            $.ajax("../php/code.php", options1),
            $.ajax("../php/code.php", options2),
            $.ajax("../php/code.php", options3)];

        $.when(promises).then(getCorpCount);
    }

    function getCorpCount(){
        var form = document.commonForm;

        var options = {
            cache: false,
            url: "../php/corp_info_count.php",
            type: "post",
            dataType: "json",
            success: function (result) {
                $("#detailGridCorpCount").text("(" + result.ROW_COUNT + ")");
                drawPagenation(result);
                searchCorp();
            }
        };

        $(form).ajaxSubmit(options);
    }

    function searchCorp() {
        var form = document.commonForm;

        var options = {
            cache: false,
            url: "../php/corp_kpi.php",
            type: "post",
            dataType: "json",
            success: function (result) {
                drawRows(result);
            }
        };

        $(form).ajaxSubmit(options);
    }

    function drawRows(result){
        $("#grid > tbody").children("tr").remove();

        if (result.length < 1){
            $("#grid > tbody").append("<tr><td colspan='5'>조회된 데이터가 없습니다.</td></tr>");
        }else {
            for (var index in result) {
                var item = result[index];

                var backgroundColor = "";
                if (item.SCORE <= 30) {
                    backgroundColor = "rgba(249,74,118,0.1)";
                }else if (item.SCORE >= 80) {
                    backgroundColor = "rgba(0,191,136,0.1)";
                }else {
                    backgroundColor = "rgba(244,193,0,0.1)";
                }

                $("#grid > tbody").append("<tr style='background-alpha: .7;background-color:" + backgroundColor + "'><td><a href='javascript:;' onclick='corpKpi.showCorpDetail(this)' data-corpseq='" + item.CORP_SEQ + "'>" + item.CORP_NM + "</a></td><td>" +
                    item.CORP_TYPE_NM + "</td><td>" + item.COMP_KIND_NM + "</td><td>" + item.BIZ_SECT_NM + "</td><td>" + item.SCORE + "</td></tr>");
            }
        }
    }

    function togglePage(){
        if ($("#corpList").css("display") == "none") {
            $("#corpList").css("display", "");
            $("#dashboard").css("display", "none");
        }else {
            $("#corpList").css("display", "none");
            $("#dashboard").css("display", "");
        }
    }

    function showCorpDetail(anchor){
        var $anchor = $(anchor);
        var corpSeq = $(anchor).attr("data-corpseq");
        //alert(corpSeq);
        togglePage();
        $("#dashboardHeader").text($anchor.text());

        var form = document.commonForm;
        $("input[type='hidden'][name='corpSeq']").val(corpSeq);

        var options = {
            cache: false,
            url: "../php/corp_kpi_detail.php",
            type: "post",
            dataType: "json",
            success: function (result) {
                corpDetailData = result;

                if ($("#barChart").css("display") != "none"){
                    drawDashboard(result);
                }else if ($("#radarChart").css("display") != "none"){
                    drawRadarChart(result);
                }else {
                    drawCorpKpiDetailGrid(result);
                }
            }
        };

        $(form).ajaxSubmit(options);
    }

    function drawDashboard(result){
        $("#barChartDiv").children(".col-lg-3").remove();

        for (var index in result){
            var item = result[index];
            var chartId = "simpleBar_" + index;

            $("#barChartDiv").append("<div class='col-lg-3'>" +
                "<div class='panel01 panel-chart'>" +
                "<div class='panel01-heading'>" + item.DEPTH_1_NM + "</div>" +
                "<div id='" + chartId +  "' class='panel01-body'>" +

                "</div>" +
                "</div>" +
                "</div>");

            // drawing SimpleBarChart
            var simpleBarChart = new SimpleBarChart();
            simpleBarChart.options = {
                data: [{label:'점수', value:item.SCORE, avg:item.AVG, max:10, depth2:item.DEPTH_2}, {label:'순위', value:(item.CORP_COUNT - item.RANKING), max:item.CORP_COUNT, depth2:item.DEPTH_2 }],
                contentHolder: chartId,
                labelFunction: function (d, i){
                    if (i==0){
                        return d.value + "점";
                    }else{
                        return (d.max - d.value) + "위";
                    }
                },
                dataTipFunction: function (d, i, tooltip){
                    var depth2 = d.depth2;
                    $(tooltip).children().remove();
                    for (index in depth2) {
                        var depth2Item = depth2[index];
                        $(tooltip).append("<span style='color:#666666;'>" + depth2Item.DEPTH_2_NM + " : </span><span style='color:#b2485f;font-weight: bold'>" + depth2Item.SCORE + "<span><br>");
                    }
                },
                backgroundTipFunction: function (d, i, tooltip){
                    $(tooltip).children().remove();
                    $(tooltip).append("<span style='color:#666666;'>평균 : </span><span style='color:#222222;font-weight: bold'>" + Math.round(d.avg * 100)/100 + "<span><br>");

                },
                colorFunction: function (d, i){
                    if (i == 0) {
                        if (d.value <= 3) {
                            return "#f94a76";
                        }else if (d.value >= 8) {
                            return "#00bf88"
                        }else {
                            return "#f4c100";
                        }
                    }else{
                        return "#5da2e6";
                    }
                }
            };
            simpleBarChart.draw(true);
        }
    }

    function drawCorpKpiDetailGrid(result){
        $("#detailGrid > tbody").children().remove();

        for (var i in result){
            var depth1 = result[i];
            var depth2 = depth1.DEPTH_2;

            var tr = "<tr>";

            for (var j in depth2){
                if (j == 0){
                    tr += "<td rowspan='" + depth2.length + "'>" + depth1.DEPTH_1_NM + "</td>";
                    tr += "<td>" + depth2[j].DEPTH_2_NM + "</td>";
                    tr += "<td>" + depth2[j].MAX_SCORE + "</td>";
                    tr += "<td>" + depth2[j].SCORE + "</td>";
                    break;
                }
            }

            var scoreChartId = "scoreChart" + i;
            var rankingChartId = "langkingChart" + i;
            tr += "<td rowspan='" + depth2.length + "'><div id='" + scoreChartId + "'></div></td>";
            tr += "<td rowspan='" + depth2.length + "'><div id='" + rankingChartId + "'></div></td>";
            tr += "<td rowspan='" + depth2.length + "'>지원활동</td>";

            tr +="</tr>";

            for (var j in depth2){
                if (j != 0){
                    tr += "<tr><td>" + depth2[j].DEPTH_2_NM + "</td>";
                    tr += "<td>" + depth2[j].MAX_SCORE + "</td>";
                    tr += "<td>" + depth2[j].SCORE + "</td></tr>";
                }
            }

            $("#detailGrid > tbody").append(tr);

            // drawing SimpleBarChart
            var simpleBarChart1 = new SimpleBarChart();
            simpleBarChart1.options = {
                width:100,
                height:140,
                data: [{label:'점수', value:depth1.SCORE, avg:depth1.AVG, max:10, depth2:depth1.DEPTH_2}],
                contentHolder: scoreChartId,
                labelFunction: function (d, i){
                    return d.value + "점";
                },
                dataTipFunction: function (d, i, tooltip){
                    var depth2 = d.depth2;
                    $(tooltip).children().remove();
                    for (index in depth2) {
                        var depth2Item = depth2[index];
                        $(tooltip).append("<span style='color:#666666;'>" + depth2Item.DEPTH_2_NM + " : </span><span style='color:#b2485f;font-weight: bold'>" + depth2Item.SCORE + "<span><br>");
                    }
                },
                backgroundTipFunction: function (d, i, tooltip){
                    $(tooltip).children().remove();
                    $(tooltip).append("<span style='color:#666666;'>평균 : </span><span style='color:#222222;font-weight: bold'>" + Math.round(d.avg * 100)/100 + "<span><br>");
                },
                colorFunction: function (d, i){
                    if (i == 0) {
                        if (d.value <= 3) {
                            return "#f94a76";
                        }else if (d.value >= 8) {
                            return "#00bf88"
                        }else {
                            return "#f4c100";
                        }
                    }else{
                        return "#5da2e6";
                    }
                }
            };
            simpleBarChart1.draw(true);

            var simpleBarChart2 = new SimpleBarChart();
            simpleBarChart2.options = {
                width:100,
                height:140,
                data: [{label:'순위', value:(depth1.CORP_COUNT - depth1.RANKING), max:depth1.CORP_COUNT}],
                showDataTip:false,
                contentHolder: rankingChartId,
                labelFunction: function (d, i){
                    return (d.max - d.value) + "위";;
                },
                colorFunction: function (d, i){
                    return "#5da2e6";
                }

            };
            simpleBarChart2.draw(true);
        }
    }

    function drawRadarChart(result){
        var options = {
            contentHolder: "radarChartDiv",
            maxValue:  10,
            categoryField: "DEPTH_1_NM",
            valueField: "SCORE",
            data:[result],
            dataTipFunction:function(d, tooltip){
                $(tooltip).children().remove();
                $(tooltip).append("<span>" + d.DEPTH_1_NM + " : </span><span style='color:#b2485f;font-weight: bold'>" + d.SCORE + "<span><br>");
            }
        }

        if (!radarChart){
            radarChart = new RadarChart();
        }
        radarChart.options = options;
        radarChart.draw();
    }

    function drawPagenation(result){
        if (!pagenator){
            pagenator = new Pagenator();
        }
        pagenator.options = {
            totalRowCount: result.ROW_COUNT,
            pageAnchorCount: 10,
            pageRowCount: 10,
            currentPageNo: 1,
            anchorGroupId: "pageIndex",
            anchorPrevGroupId: "prevPageGroup",
            anchorNextGroupId: "nextPageGroup",
            onPageClick: function(pageNo){
                $("input[type='hidden'][name='pageNo']").val(pageNo);
                searchCorp();
            }
        };

        $("input[type='hidden'][name='pageRowCount']").val(pagenator.options.pageRowCount);
        $("input[type='hidden'][name='pageNo']").val(pagenator.options.currentPageNo);
        pagenator.draw();
    }

    function toggleTab(event){
        $("#navTab > li").attr("class", "");
        var $a = $(event.currentTarget)
        $($a.parent()).attr("class", "active");

        if ($a.attr("data-page") == "barChart"){
            $("#barChart").css("display", "");
            $("#radarChart").css("display", "none");
            $("#depth2Grid").css("display", "none");
            drawDashboard(corpDetailData);
        }else if ($a.attr("data-page") == "radarChart") {
            $("#barChart").css("display", "none");
            $("#radarChart").css("display", "");
            $("#depth2Grid").css("display", "none");
            drawRadarChart(corpDetailData);
        }else{
            $("#barChart").css("display", "none");
            $("#radarChart").css("display", "none");
            $("#depth2Grid").css("display", "");
            drawCorpKpiDetailGrid(corpDetailData);
        }
    }

    return {
        initialize:initialize,
        showCorpDetail:showCorpDetail,
        searchCorp: searchCorp,
        drawDashboard:drawDashboard,
        drawRadarChart:drawRadarChart,
        drawCorpKpiDetailGrid:drawCorpKpiDetailGrid,
        togglePage:togglePage
    };

})(window, jQuery, undefined)
